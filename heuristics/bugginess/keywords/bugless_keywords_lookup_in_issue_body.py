from typing import Optional

from bohrapi.collection.artifacts import Commit
from bohrapi.collection.heuristictypes.keywords import KeywordHeuristics
from bohrapi.util.misc import NgramSet
from bohrlabels.core import Labels


@KeywordHeuristics(
    Commit,
    keywords=[
        "abil",
        "ad",
        "add",
        "addit",
        "allow",
        "analysi",
        "avoid",
        "baselin",
        "beautification",
        "benchmark",
        "better",
        "bump",
        "chang log",
        ["clean", "cleanup"],
        "comment",
        "complet",
        "configur chang",
        "consolid",
        "convert",
        "coverag",
        "create",
        "deprec",
        "develop",
        ["doc", "document", "javadoc"],
        "drop",
        "enhanc",
        "exampl",
        "exclud",
        "expand",
        "extendgener",
        "featur",
        "forget",
        "format",
        "gitignor",
        "idea",
        "implement",
        "improv",
        "includ",
        "info",
        "intorduc",
        "limit",
        "log",
        "migrat",
        "minim",
        "modif",
        "move",
        "new",
        "note",
        "opinion",
        ["optim", "optimis"],
        "pass test",
        "perf test",
        "perfom test",
        "perform",
        "plugin",
        "polish",
        "possibl",
        "prepar",
        "propos",
        "provid",
        "publish",
        "readm",
        "reduc",
        "refactor",
        "refin",
        "reformat",
        "regress test",
        "reimplement",
        "release",
        "remov",
        "renam",
        "reorgan",
        "replac",
        "restrict",
        "restructur",
        "review",
        "rewrit",
        "rid",
        "set up",
        "simplif",
        "simplifi",
        ["speedup", "speed up"],
        "stage",
        "stat",
        "statist",
        "support",
        "switch",
        "test",
        "test coverag",
        "test pass",
        "todo",
        "tweak",
        "unit",
        "unnecessari",
        "updat",
        "upgrad",
        "version",
    ],
    name_pattern="bugless_issue_body_keyword_%1",
)
def bugless_keywords_lookup_in_issue_body(
    commit: Commit, keywords: NgramSet
) -> Optional[Labels]:
    if commit.issues_match_ngrams(keywords):
        return l.CommitLabel.NonBugFix
    return None
